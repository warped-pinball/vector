name: Build and Deploy

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev/requirements.txt

      - name: Determine build environment and version
        id: build_env
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            ENV="dev"
            SUFFIX="-dev-${{ github.run_number }}"
          elif [ "${{ github.event_name }}" = "push" ]; then
            ENV="beta"
            SUFFIX="-beta-${{ github.run_number }}"
          elif [ "${{ github.event_name }}" = "release" ]; then
            ENV="prod"
            SUFFIX=""
          else
            ENV="dev"
            SUFFIX="-dev"
          fi

          VERSION=$(grep WarpedVersion src/SharedState.py | awk -F'"' '{print $2}')${SUFFIX}
          echo "ENV=$ENV" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update SharedState.py Version
        run: |
          sed -i "s/WarpedVersion = .*/WarpedVersion = \"$VERSION\"/" src/SharedState.py
          git diff src/SharedState.py

      - name: Build project
        run: |
          python dev/build.py --build-dir build --env $ENV

      - name: Generate update.json
        run: |
          python dev/build_update.py --build-dir build --output update.json --version $VERSION

      - name: Upload artifact to GitHub Release
        uses: softprops/action-gh-release@v2
        if: ${{ github.event_name == 'release' }}
        with:
          files: update.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: pico-update
          path: update.json