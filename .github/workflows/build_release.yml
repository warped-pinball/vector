name: Build and Deploy

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        target_system: [sys11, wpc, em]
    outputs:
      version: ${{ steps.determine_version.outputs.version }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev/requirements.txt

      - name: Determine build environment and version
        id: determine_version
        run: |
          BASE_VERSION=$(grep WarpedVersion src/common/SharedState.py | awk -F '"' '{print $2}')
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            SUFFIX="-dev${{ github.event.pull_request.number }}"
          elif [ "${{ github.event_name }}" = "push" ]; then
            SUFFIX="-beta${{ github.run_number }}"
          else
            SUFFIX=""
          fi
          VERSION="$BASE_VERSION$SUFFIX"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update SharedState.py
        run: |
          sed -i "s/WarpedVersion = .*/WarpedVersion = \"${{ env.VERSION }}\"/" src/common/SharedState.py

      - name: Build and generate update file
        run: |
          python dev/build.py --build-dir build --target_system ${{ matrix.target_system }}
          rm -f private_key.pem
          if [ -n "${{ secrets.WARPED_PINBALL_PRIVATE_KEY }}" ]; then
            echo "${{ secrets.WARPED_PINBALL_PRIVATE_KEY }}" > private_key.pem
            python dev/build_update.py \
              --build-dir build \
              --output update_${{ matrix.target_system }}.json \
              --version ${{ env.VERSION }} \
              --private-key private_key.pem
          else
            python dev/build_update.py \
              --build-dir build \
              --output update_${{ matrix.target_system }}.json \
              --version ${{ env.VERSION }}
          fi

      - name: Create or update GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: ${{ env.VERSION }}
          body: |
            Version: ${{ env.VERSION }}
            Trigger: ${{ github.event_name }}
          draft: false
          prerelease: ${{ github.event_name != 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload update files to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            update_sys11.json
            update_wpc.json
            update_em.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
