name: Build and Deploy

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  release:
    types: [published]

env:
  PYTHON_VERSION: "3.10"

jobs:
  # ─── Determine version once ────────────────────────────────────────────────
  determine_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Read base version and compute suffix
        id: set_version
        run: |
          BASE=$(grep WarpedVersion src/common/SharedState.py \
                    | awk -F '"' '{print $2}')
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            SUFFIX="-dev${{ github.event.pull_request.number }}"
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            SUFFIX="-beta${{ github.run_number }}"
          else
            SUFFIX=""
          fi
          FULL="${BASE}${SUFFIX}"
          echo "version=$FULL" >> $GITHUB_OUTPUT

  # ─── Build + Release per target ───────────────────────────────────────────
  build_and_release:
    needs: determine_version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target_system: [sys11, wpc, em]
    env:
      VERSION: ${{ needs.determine_version.outputs.version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev/requirements.txt

      - name: Update SharedState.py to ${{ env.VERSION }}
        run: |
          sed -i "s/WarpedVersion = .*/WarpedVersion = \"${VERSION}\"/" \
            src/common/SharedState.py

      - name: Build and generate update JSON
        run: |
          python dev/build.py --build-dir build \
                              --target_system "${{ matrix.target_system }}"
          rm -f private_key.pem
          if [[ -n "${{ secrets.WARPED_PINBALL_PRIVATE_KEY }}" ]]; then
            echo "${{ secrets.WARPED_PINBALL_PRIVATE_KEY }}" \
              > private_key.pem
            python dev/build_update.py \
              --build-dir build \
              --output update_${{ matrix.target_system }}.json \
              --version "${VERSION}" \
              --private-key private_key.pem
          else
            python dev/build_update.py \
              --build-dir build \
              --output update_${{ matrix.target_system }}.json \
              --version "${VERSION}"
          fi

      - name: Publish Release & attach JSON
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name:     ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body: |
            • Version: ${{ env.VERSION }}
            • Source:   ${{ github.event_name == 'pull_request' && github.event.pull_request.html_url || github.ref }}
          draft:       false
          prerelease:  ${{ github.event_name != 'release' }}
          files:       update_${{ matrix.target_system }}.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
